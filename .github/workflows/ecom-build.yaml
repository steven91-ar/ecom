name: "Deploy Now: Execute Build"

on:
  workflow_call:
    inputs:
      site-url:
        required: true
        type: string
      branch-id:
        required: true
        type: string

env:
  DEPLOYMENT_FOLDER: ./

jobs:
  build-project:
    name: build ecom
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: v22.x

      - name: Build Node assets
        env:
          CI: true
          SITE_URL: ${{ inputs.site-url }}
        run: |
          npm ci
          npm run build

      - name: Setup composer
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          tools: composer:2

      - name: Store deployment content
        uses: ionos-deploy-now/artifact-action@v1
        with:
          api-key: ${{ secrets.IONOS_API_KEY }}
          service-host: api-eu.ionos.space
          project-id: a96ea6c7-bb75-41a3-8a9e-c0c22372d255
          branch-id: ${{ inputs.branch-id }}
          version: ${{ github.sha }}
          folder: ${{ env.DEPLOYMENT_FOLDER }}
          config-file: .deploy-now/ecom/config.yaml
          action: upload

      - name: Create .env file from secrets
        run: |
          echo "APP_ENV=prod" >> .env
          echo "APP_SECRET=${{ secrets.APP_SECRET }}" >> .env
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
          echo "MAILER_DSN=${{ secrets.MAILER_DSN }}" >> .env
          echo "ADMIN_EMAIL=${{ secrets.ADMIN_EMAIL }}" >> .env
          echo "STRIPE_SECRET_KEY_DEV=${{ secrets.STRIPE_SECRET_KEY_DEV }}" >> .env
          echo "STRIPE_SECRET_KEY_PROD=${{ secrets.STRIPE_SECRET_KEY_PROD }}" >> .env

      - name: Run composer install
        run: |
          composer install --optimize-autoloader --no-dev
          php bin/console cache:clear --no-warmup --no-debug